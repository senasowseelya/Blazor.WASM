@using Blazor.WASM.Common.Models
@using Blazor.WASM.Services
@using Blazor.WASM.Styles
@inherits LayoutComponentBase
@inject ToastService ToastService

<MudThemeProvider @ref="@_mudThemeProvider" Theme="Themes.DefaultTheme" @bind-IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout Class="@(_isDarkMode ? "dark" : null)">
    <MudAppBar Elevation="0" Fixed="true"
               Class="bg-[--mud-palette-appbar-background] bg-[--mud-palette-appbar-background90] backdrop-blur-sm">
        <MudStack Row="true" Spacing="24" Class="ma-0 pa-0">
            <MudImage Src="images/main_logo.jpg" Width="40" Style="border-radius:50%" Alt="User Display Picture"
                      Elevation="25" Class="mx-0 my-3 pa-0" />

        </MudStack>
        @if (_user is not null && !_user.IsAdmin)
        {
            <MudIcon Icon="@Icons.Material.Outlined.Business" Color="Color.Dark" Class="ml-3 me-1" Size="Size.Small"></MudIcon>
            <MudText Color="Color.Dark"><b>@_user.AgencyName</b></MudText>
        }
        <MudSpacer />
        <MudStack Row="true">
            <MudToggleIconButton @bind-Toggled="@_isDarkMode" Size="Size.Medium" Color="Color.Default"
                                 Icon="@Icons.Material.Rounded.LightMode" ToggledIcon="@Icons.Material.Rounded.DarkMode"
                                 Class="p-2 my-auto" />
            <MudMenu AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" FullWidth="true">
                <ActivatorContent>
                    <MudStack Spacing="0" Row="true" Class="flex flex-row">
                        <MudAvatar>
                            <MudImage Src="images/profile.jpg"></MudImage>
                        </MudAvatar>
                        <MudText Typo="Typo.body2" Class="my-auto">@_user?.DisplayName</MudText>
                    </MudStack>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem>Profile</MudMenuItem>
                    <MudMenuItem>Logout</MudMenuItem>
                </ChildContent>
            </MudMenu>
        </MudStack>
    </MudAppBar>
    <MudDrawer Elevation="1" Class="border-solid border-1 mud-border-tertiary" DisableOverlay="true"
               ClipMode="DrawerClipMode.Always" MiniWidth="52px" Width="200px" Variant="DrawerVariant.Mini"
               @bind-Open="@_drawerOpen" Breakpoint="@Breakpoint.Xs">
        <MudStack Class="h-[91.5vh]">
            <NavMenu />
            <MudIconButton Class="@_expanderIconClass" Icon="@_expanderIcon"
                           OnClick="@((e) => DrawerToggle())" Size="@Size.Medium" />
        </MudStack>
    </MudDrawer>
    <MudMainContent>
        <MudContainer Class="fixed pa-0 ma-0" MaxWidth="MaxWidth.ExtraLarge">
        </MudContainer>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="ma-0 pa-4">
            <ErrorBoundary Context="Exception">
               <ChildContent>
                    @Body
               </ChildContent> 
               <ErrorContent>
                    @{
                        OnError(@Exception.Message);
                    }
                </ErrorContent>
            </ErrorBoundary>
        </MudContainer>
    </MudMainContent>
</MudLayout>


@code
{
    bool _drawerOpen = true;
    string _expanderIconClass = "rounded-lg ma-0 pa-0 mx-auto mt-auto";
    string _expanderIcon = Icons.Material.Filled.KeyboardDoubleArrowLeft;
    bool _isDarkMode;
    MudThemeProvider _mudThemeProvider;
    UserContext _user;

    protected override void OnInitialized()
    {
        //TODO: Get User from LocalStorage
        _user = new()
        {
            DisplayName = "John Doe",
        };
        base.OnInitialized();
    }
    void OnError(string message)
    {
        ToastService.ShowError(message);
        ToastService.ShowInfo("Please refresh the browser");
    }
    void DrawerToggle()
    {
        _expanderIcon = _drawerOpen ? Icons.Material.Filled.KeyboardDoubleArrowRight : Icons.Material.Filled.KeyboardDoubleArrowLeft;
        _drawerOpen = !_drawerOpen;
    }
}